# Traefik reverse proxy setup
# Handles SSL termination and automatic service discovery

services:
  # Main reverse proxy service
  # Running on manager nodes and exposing ports 80/443
  reverse-proxy:
    image: traefik:v2.11
    # Debug mode enabled for now - will disable in prod
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.network=traefik"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--accesslog=true"
      - "--log.level=DEBUG"
    
    # Need these ports exposed on the host
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
      - target: 8080
        published: ${TRAEFIK_DASHBOARD_PORT}
        mode: host

    # Mount docker socket to watch for services
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/acme.json:/acme.json

    # Using replicated mode with 1 instance
    # Only runs on manager nodes for security
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.dashboard.rule=Host(`${TRAEFIK_DOMAIN}`)"
        - "traefik.http.routers.dashboard.service=api@internal"
        - "traefik.http.routers.dashboard.entrypoints=web"
        - "traefik.http.services.dashboard.loadbalancer.server.port=8080"

# External network that other stacks will use
networks:
  traefik:
    external: true
    name: traefik