services:
  frontend:
    image: mohammedbenhammoute/frontend:1.0
    # Remove direct port mapping since Traefik handles routing
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.role == manager  # Run on manager node
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.frontend.rule=Host(`aseds.inpt.com`)"
        - "traefik.http.services.frontend.loadbalancer.server.port=80"
        - "traefik.http.routers.frontend.entrypoints=web"
        - "traefik.http.services.frontend.loadbalancer.sticky=true"
    networks:
      - traefik

  backend:
    image: mohammedbenhammoute/backend:1.0
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik"
        - "traefik.http.routers.backend.rule=Host(`api.aseds.inpt.com`)"
        - "traefik.http.services.backend.loadbalancer.server.port=8080"
    environment:
      - DB_HOST=myapp_postgres # Fixed service name
      - DB_PORT=5432
      - DB_NAME=my_database
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - SPRING_PROFILES_ACTIVE=prod
    networks:
      - traefik
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  postgres:
    image: postgres:17-alpine
    deploy:
      replicas: 2
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
    environment:
      - POSTGRES_DB=my_database
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - traefik
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    name: postgres_data
    driver: local

networks:
  traefik:
    external: true
    name: traefik