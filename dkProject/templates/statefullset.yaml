{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgresql
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-postgresql
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  serviceName: postgres-service
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
        imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.postgresql.service.port }}
        env:
        - name: POSTGRES_USER
          value: {{ .Values.postgresql.user | quote }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.postgresql.password | quote }}
        - name: POSTGRES_DB
          value: {{ .Values.postgresql.db | quote }}
        resources:
{{- toYaml .Values.postgresql.resources | nindent 10 }}
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: postgresql-data
    spec:
      accessModes: {{ .Values.postgresql.persistence.accessModes | toJson }}
      {{- if .Values.postgresql.persistence.storageClass }}
      storageClassName: {{ .Values.postgresql.persistence.storageClass }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.postgresql.persistence.size }}
{{- end }}